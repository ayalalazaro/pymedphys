Traceback (most recent call last):
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
gamma_options = {
    'dose_percent_threshold': 1,
    'distance_mm_threshold': 1,
    'lower_percent_dose_cutoff': 20,
    'interp_fraction': 10,  # Should be 10 or more for more accurate results
    'max_gamma': 2,
    'random_subset': None,
    'local_gamma': True,
    'ram_available': 2**29  # 1/2 GB
}
    
gamma = pymedphys.gamma(
    axes_reference, dose_reference, 
    axes_evaluation, dose_evaluation, 
    **gamma_options)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:238[0m, in [0;36mAliasModule.<locals>.AliasModule.__getattribute__[0;34m(self, name)[0m
[1;32m    237[0m [38;5;28;01mtry[39;00m:
[0;32m--> 238[0m     [38;5;28;01mreturn[39;00m [38;5;28mgetattr[39m([43mgetmod[49m[43m([49m[43m)[49m, name)
[1;32m    239[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mImportError[39;00m, [38;5;167;01mModuleNotFoundError[39;00m):
[1;32m    240[0m     [38;5;66;03m# Support inspection rejection[39;00m

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:216[0m, in [0;36mAliasModule.<locals>.getmod[0;34m()[0m
[1;32m    215[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m mod:
[0;32m--> 216[0m     x [38;5;241m=[39m [43mimportobj[49m[43m([49m[43mmodpath[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m    217[0m     [38;5;28;01mif[39;00m attrname [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:103[0m, in [0;36mimportobj[0;34m(modpath, attrname)[0m
[1;32m    102[0m [38;5;124;03m"""imports a module, then resolves the attrname on it"""[39;00m
[0;32m--> 103[0m module [38;5;241m=[39m [38;5;28;43m__import__[39;49m[43m([49m[43mmodpath[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m__doc__[39;49m[38;5;124;43m"[39;49m[43m][49m[43m)[49m
[1;32m    104[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m attrname:

[0;31mModuleNotFoundError[0m: No module named 'interpolation'

During handling of the above exception, another exception occurred:

[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn [11], line 12[0m
[1;32m      1[0m gamma_options [38;5;241m=[39m {
[1;32m      2[0m     [38;5;124m'[39m[38;5;124mdose_percent_threshold[39m[38;5;124m'[39m: [38;5;241m1[39m,
[1;32m      3[0m     [38;5;124m'[39m[38;5;124mdistance_mm_threshold[39m[38;5;124m'[39m: [38;5;241m1[39m,
[0;32m   (...)[0m
[1;32m      9[0m     [38;5;124m'[39m[38;5;124mram_available[39m[38;5;124m'[39m: [38;5;241m2[39m[38;5;241m*[39m[38;5;241m*[39m[38;5;241m29[39m  [38;5;66;03m# 1/2 GB[39;00m
[1;32m     10[0m }
[0;32m---> 12[0m gamma [38;5;241m=[39m [43mpymedphys[49m[38;5;241;43m.[39;49m[43mgamma[49m[43m([49m
[1;32m     13[0m [43m    [49m[43maxes_reference[49m[43m,[49m[43m [49m[43mdose_reference[49m[43m,[49m[43m [49m
[1;32m     14[0m [43m    [49m[43maxes_evaluation[49m[43m,[49m[43m [49m[43mdose_evaluation[49m[43m,[49m[43m [49m
[1;32m     15[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mgamma_options[49m[43m)[49m

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_gamma/implementation/shell.py:166[0m, in [0;36mgamma_shell[0;34m(axes_reference, dose_reference, axes_evaluation, dose_evaluation, dose_percent_threshold, distance_mm_threshold, lower_percent_dose_cutoff, interp_fraction, interpolator, max_gamma, local_gamma, global_normalisation, skip_once_passed, random_subset, ram_available, quiet)[0m
[1;32m    159[0m logging[38;5;241m.[39minfo([38;5;124m"[39m[38;5;124mDistance threshold set to [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m, options[38;5;241m.[39mdistance_mm_threshold)
[1;32m    160[0m logging[38;5;241m.[39minfo(
[1;32m    161[0m     [38;5;124m"[39m[38;5;124mLower dose cutoff set to [39m[38;5;132;01m%.3f[39;00m[38;5;124m ([39m[38;5;132;01m%.1f[39;00m[38;5;132;01m%%[39;00m[38;5;124m of normalisation)[39m[38;5;124m"[39m,
[1;32m    162[0m     options[38;5;241m.[39mlower_dose_cutoff,
[1;32m    163[0m     lower_percent_dose_cutoff,
[1;32m    164[0m )
[0;32m--> 166[0m current_gamma [38;5;241m=[39m [43mgamma_loop[49m[43m([49m[43moptions[49m[43m)[49m
[1;32m    168[0m gamma [38;5;241m=[39m {}
[1;32m    169[0m [38;5;28;01mfor[39;00m i, dose_threshold [38;5;129;01min[39;00m [38;5;28menumerate[39m(options[38;5;241m.[39mdose_percent_threshold):

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_gamma/implementation/shell.py:353[0m, in [0;36mgamma_loop[0;34m(options)[0m
[1;32m    346[0m [38;5;28;01mwhile[39;00m distance [38;5;241m<[39m[38;5;241m=[39m options[38;5;241m.[39mmaximum_test_distance:
[1;32m    347[0m     logging[38;5;241m.[39mdebug(
[1;32m    348[0m         [38;5;124m"[39m[38;5;124mCurrent distance: [39m[38;5;132;01m%.2f[39;00m[38;5;124m mm | [39m[38;5;124m"[39m [38;5;124m"[39m[38;5;124mNumber of reference points remaining: [39m[38;5;132;01m%i[39;00m[38;5;124m"[39m,
[1;32m    349[0m         distance,
[1;32m    350[0m         np[38;5;241m.[39msum(to_be_checked),
[1;32m    351[0m     )
[0;32m--> 353[0m     min_relative_dose_difference [38;5;241m=[39m [43mcalculate_min_dose_difference[49m[43m([49m
[1;32m    354[0m [43m        [49m[43moptions[49m[43m,[49m[43m [49m[43mdistance[49m[43m,[49m[43m [49m[43mto_be_checked[49m[43m,[49m[43m [49m[43mdistance_step_size[49m
[1;32m    355[0m [43m    [49m[43m)[49m
[1;32m    357[0m     current_gamma, still_searching_for_gamma_all [38;5;241m=[39m multi_thresholds_gamma_calc(
[1;32m    358[0m         options,
[1;32m    359[0m         current_gamma,
[0;32m   (...)[0m
[1;32m    362[0m         to_be_checked,
[1;32m    363[0m     )
[1;32m    365[0m     still_searching_for_gamma [38;5;241m=[39m np[38;5;241m.[39many(
[1;32m    366[0m         np[38;5;241m.[39many(still_searching_for_gamma_all, axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m), axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m
[1;32m    367[0m     )

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_gamma/implementation/shell.py:490[0m, in [0;36mcalculate_min_dose_difference[0;34m(options, distance, to_be_checked, distance_step_size)[0m
[1;32m    484[0m [38;5;28;01massert[39;00m np[38;5;241m.[39mall(to_be_checked[to_be_checked_sliced])
[1;32m    486[0m axes_reference_to_be_checked [38;5;241m=[39m options[38;5;241m.[39mflat_mesh_axes_reference[
[1;32m    487[0m     :, to_be_checked_sliced
[1;32m    488[0m ]
[0;32m--> 490[0m evaluation_dose [38;5;241m=[39m [43minterpolate_evaluation_dose_at_distance[49m[43m([49m
[1;32m    491[0m [43m    [49m[43moptions[49m[43m,[49m
[1;32m    492[0m [43m    [49m[43maxes_reference_to_be_checked[49m[43m,[49m
[1;32m    493[0m [43m    [49m[43mcoordinates_at_distance_shell[49m[43m,[49m
[1;32m    494[0m [43m[49m[43m)[49m
[1;32m    496[0m [38;5;28;01mif[39;00m options[38;5;241m.[39mlocal_gamma:
[1;32m    497[0m     [38;5;28;01mwith[39;00m np[38;5;241m.[39merrstate(divide[38;5;241m=[39m[38;5;124m"[39m[38;5;124mignore[39m[38;5;124m"[39m):

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_gamma/implementation/shell.py:547[0m, in [0;36minterpolate_evaluation_dose_at_distance[0;34m(options, axes_reference_to_be_checked, coordinates_at_distance_shell)[0m
[1;32m    541[0m         grids[38;5;241m.[39mappend(all_points[:, :, i])
[1;32m    543[0m     points_interp [38;5;241m=[39m np[38;5;241m.[39mcolumn_stack([np[38;5;241m.[39mravel(mgrid) [38;5;28;01mfor[39;00m mgrid [38;5;129;01min[39;00m grids])[38;5;241m.[39mastype(
[1;32m    544[0m         [38;5;28mfloat[39m
[1;32m    545[0m     )
[0;32m--> 547[0m     coords_evaluation_grid [38;5;241m=[39m [43minterpolation[49m[38;5;241;43m.[39;49m[43msplines[49m[38;5;241;43m.[39;49m[43mCGrid[49m([38;5;241m*[39moptions[38;5;241m.[39maxes_evaluation)
[1;32m    549[0m     evaluation_dose [38;5;241m=[39m interpolation[38;5;241m.[39msplines[38;5;241m.[39meval_linear(
[1;32m    550[0m         coords_evaluation_grid,
[1;32m    551[0m         np[38;5;241m.[39marray(options[38;5;241m.[39mdose_evaluation),
[1;32m    552[0m         points_interp,
[1;32m    553[0m     )[38;5;241m.[39mreshape(np[38;5;241m.[39mshape(all_points)[:[38;5;241m-[39m[38;5;241m1[39m])
[1;32m    555[0m [38;5;28;01mreturn[39;00m evaluation_dose

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:248[0m, in [0;36mAliasModule.<locals>.AliasModule.__getattribute__[0;34m(self, name)[0m
[1;32m    244[0m no_scope_modname [38;5;241m=[39m modname[38;5;241m.[39mreplace([38;5;124m"[39m[38;5;124mpymedphys._imports.[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m)
[1;32m    246[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpymedphys[39;00m[38;5;21;01m.[39;00m[38;5;21;01m_version[39;00m [38;5;28;01mimport[39;00m __version__
[0;32m--> 248[0m [38;5;28;01mraise[39;00m [38;5;167;01mModuleNotFoundError[39;00m(
[1;32m    249[0m     [38;5;124mf[39m[38;5;124m"""[39m
[1;32m    250[0m [38;5;124m    PyMedPhys was unable to import [39m[38;5;124m"[39m[38;5;132;01m{[39;00mno_scope_modname[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m.[39m
[1;32m    251[0m [38;5;124m    The easiest way to fix this issue is to use the [39m[38;5;124m"[39m[38;5;124m[user][39m[38;5;124m"[39m
[1;32m    252[0m [38;5;124m    option when installing PyMedPhys. For example,[39m
[1;32m    253[0m [38;5;124m    with pip this can be done by calling[39m
[1;32m    254[0m [38;5;124m    [39m[38;5;124m"[39m[38;5;124mpip install pymedphys[user]==[39m[38;5;132;01m{[39;00m__version__[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m.[39m
[1;32m    255[0m [38;5;124m    [39m[38;5;124m"""[39m
[1;32m    256[0m )

[0;31mModuleNotFoundError[0m: 
                    PyMedPhys was unable to import "interpolation.splines.CGrid".
                    The easiest way to fix this issue is to use the "[user]"
                    option when installing PyMedPhys. For example,
                    with pip this can be done by calling
                    "pip install pymedphys[user]==0.40.0-dev2".
                    
ModuleNotFoundError: 
                    PyMedPhys was unable to import "interpolation.splines.CGrid".
                    The easiest way to fix this issue is to use the "[user]"
                    option when installing PyMedPhys. For example,
                    with pip this can be done by calling
                    "pip install pymedphys[user]==0.40.0-dev2".
                    

